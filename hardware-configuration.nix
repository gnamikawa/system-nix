# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/864978b2-784f-4528-8aa0-b1d2b84e1e12";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/B442-5062";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;










  # 1. Allow NVIDIA's proprietary driver and 32-bit libraries
  nixpkgs.config.allowUnfree = true;
  hardware.graphics.enable = true;
  hardware.graphics.enable32Bit = true;

  # 2. Configure the NVIDIA module (DRM/KMS + driver selection)
  boot.kernelParams = [
    "nvidia-drm.modeset=1"
    "nvidia_drm.fbdev=1"
  ];

  hardware.nvidia = {
    # Use the "stable" series for both 3070 & 1650
    package = config.boot.kernelPackages.nvidiaPackages.stable;

    # Enable DRM modesetting for Wayland compositors
    modesetting.enable = true;

    # Use proprietary module (best compatibility)
    open = false;

    # (Optional) NVIDIA Settings GUI
    nvidiaSettings = true;

    # (Optional) fine-tune power management
    powerManagement.enable = false;
  };

  # 3. Wayland environment variables for GBM, GLX, browsers, etc.
  environment.variables = {
    XDG_SESSION_TYPE            = "wayland";
    GBM_BACKEND                 = "nvidia-drm";
    __GLX_VENDOR_LIBRARY_NAME   = "nvidia";
    MOZ_ENABLE_WAYLAND          = "1";
    NIXOS_OZONE_WL              = "1";
    WLR_NO_HARDWARE_CURSORS     = "1";
  };
}

